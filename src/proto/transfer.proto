syntax = "proto3";
package gooseai;
option go_package = "github.com/stability-ai/api-interfaces/gooseai/transfer";

message TransferRequest {
  // the bucket to transfer the assets from
  string source_bucket = 1; 
  // a list of keys in the source bucket to transfer to the destination bucket
  repeated string source_keys = 2; 
  // the bucket to transfer the assets to
  string destination_bucket = 3; 
  // a list of keys in the destination bucket to transfer the assets to
  repeated string destination_keys = 4;
}

message TransferResponse {
  // the list of transferred assets in their destination location    
  repeated string urls = 1; 
}

message DeleteRequest {
  // the bucket to delete the assets from
  string bucket = 1; 
  // a list of keys in the bucket to delete
  repeated string keys = 2; 
}

message DeleteResponse {
  // Whether this was successful or not
  bool success = 1;
}

message DeleteObjectsByPrefixRequest {
  // the bucket to delete the assets from
  string bucket_name = 1;
  // the prefix of the keys in the processing bucket to delete
  string prefix = 2;
}

message DeleteObjectsByPrefixResponse {
  // Whether this was successful or not
  bool success = 1;
}

service TransferService {
  // Internal use only. 
  // Initiates a transfer of assets between two Stability AI buckets.
  rpc Transfer(TransferRequest) returns (TransferResponse) {}
  // Internal use only. 
  // Deletes specific assets by key from Stability archive bucket.
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
  // Internal use only.
  // Deletes objects from a bucket by prefix.
  rpc DeleteObjectsByPrefix(DeleteObjectsByPrefixRequest) returns (DeleteObjectsByPrefixResponse) {}
}