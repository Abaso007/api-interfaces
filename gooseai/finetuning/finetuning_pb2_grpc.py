# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import finetuning_pb2 as finetuning__pb2


class FineTuningServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateFineTuningModel = channel.unary_unary(
                '/gooseai.FineTuningService/CreateFineTuningModel',
                request_serializer=finetuning__pb2.CreateFineTuningModelRequest.SerializeToString,
                response_deserializer=finetuning__pb2.CreateFineTuningModelResponse.FromString,
                )
        self.GetFineTuningModelById = channel.unary_unary(
                '/gooseai.FineTuningService/GetFineTuningModelById',
                request_serializer=finetuning__pb2.GetFineTuningModelByIdRequest.SerializeToString,
                response_deserializer=finetuning__pb2.GetFineTuningModelByIdResponse.FromString,
                )
        self.UpdateFineTuningModel = channel.unary_unary(
                '/gooseai.FineTuningService/UpdateFineTuningModel',
                request_serializer=finetuning__pb2.UpdateFineTuningModelRequest.SerializeToString,
                response_deserializer=finetuning__pb2.UpdateFineTuningModelResponse.FromString,
                )
        self.DeleteFineTuningModel = channel.unary_unary(
                '/gooseai.FineTuningService/DeleteFineTuningModel',
                request_serializer=finetuning__pb2.DeleteFineTuningModelRequest.SerializeToString,
                response_deserializer=finetuning__pb2.DeleteFineTuningModelResponse.FromString,
                )
        self.GetFineTuningModelStatus = channel.unary_unary(
                '/gooseai.FineTuningService/GetFineTuningModelStatus',
                request_serializer=finetuning__pb2.GetFineTuningModelStatusRequest.SerializeToString,
                response_deserializer=finetuning__pb2.GetFineTuningModelStatusResponse.FromString,
                )
        self.ResubmitFineTuningModel = channel.unary_unary(
                '/gooseai.FineTuningService/ResubmitFineTuningModel',
                request_serializer=finetuning__pb2.ResubmitFineTuningModelRequest.SerializeToString,
                response_deserializer=finetuning__pb2.ResubmitFineTuningModelResponse.FromString,
                )
        self.GetFineTuningModelsByUserId = channel.unary_unary(
                '/gooseai.FineTuningService/GetFineTuningModelsByUserId',
                request_serializer=finetuning__pb2.GetFineTuningModelsByUserIdRequest.SerializeToString,
                response_deserializer=finetuning__pb2.GetFineTuningModelsByUserIdResponse.FromString,
                )
        self.GetFineTuningModelsByOrgId = channel.unary_unary(
                '/gooseai.FineTuningService/GetFineTuningModelsByOrgId',
                request_serializer=finetuning__pb2.GetFineTuningModelsByOrgIdRequest.SerializeToString,
                response_deserializer=finetuning__pb2.GetFineTuningModelsByOrgIdResponse.FromString,
                )


class FineTuningServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateFineTuningModel(self, request, context):
        """Create a new project if it does not exist, and runs it
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFineTuningModelById(self, request, context):
        """Get a FineTuningModel by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFineTuningModel(self, request, context):
        """Update a FineTuningModel by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFineTuningModel(self, request, context):
        """Delete a FineTuningModel by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFineTuningModelStatus(self, request, context):
        """Check the progress of a FineTuningModel by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResubmitFineTuningModel(self, request, context):
        """Re-run training API call, does not create a new model in the DB
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFineTuningModelsByUserId(self, request, context):
        """Get a list of FineTuningModels by user id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFineTuningModelsByOrgId(self, request, context):
        """Get a list of FineTuningModels by org id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FineTuningServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateFineTuningModel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFineTuningModel,
                    request_deserializer=finetuning__pb2.CreateFineTuningModelRequest.FromString,
                    response_serializer=finetuning__pb2.CreateFineTuningModelResponse.SerializeToString,
            ),
            'GetFineTuningModelById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFineTuningModelById,
                    request_deserializer=finetuning__pb2.GetFineTuningModelByIdRequest.FromString,
                    response_serializer=finetuning__pb2.GetFineTuningModelByIdResponse.SerializeToString,
            ),
            'UpdateFineTuningModel': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFineTuningModel,
                    request_deserializer=finetuning__pb2.UpdateFineTuningModelRequest.FromString,
                    response_serializer=finetuning__pb2.UpdateFineTuningModelResponse.SerializeToString,
            ),
            'DeleteFineTuningModel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFineTuningModel,
                    request_deserializer=finetuning__pb2.DeleteFineTuningModelRequest.FromString,
                    response_serializer=finetuning__pb2.DeleteFineTuningModelResponse.SerializeToString,
            ),
            'GetFineTuningModelStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFineTuningModelStatus,
                    request_deserializer=finetuning__pb2.GetFineTuningModelStatusRequest.FromString,
                    response_serializer=finetuning__pb2.GetFineTuningModelStatusResponse.SerializeToString,
            ),
            'ResubmitFineTuningModel': grpc.unary_unary_rpc_method_handler(
                    servicer.ResubmitFineTuningModel,
                    request_deserializer=finetuning__pb2.ResubmitFineTuningModelRequest.FromString,
                    response_serializer=finetuning__pb2.ResubmitFineTuningModelResponse.SerializeToString,
            ),
            'GetFineTuningModelsByUserId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFineTuningModelsByUserId,
                    request_deserializer=finetuning__pb2.GetFineTuningModelsByUserIdRequest.FromString,
                    response_serializer=finetuning__pb2.GetFineTuningModelsByUserIdResponse.SerializeToString,
            ),
            'GetFineTuningModelsByOrgId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFineTuningModelsByOrgId,
                    request_deserializer=finetuning__pb2.GetFineTuningModelsByOrgIdRequest.FromString,
                    response_serializer=finetuning__pb2.GetFineTuningModelsByOrgIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gooseai.FineTuningService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FineTuningService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateFineTuningModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gooseai.FineTuningService/CreateFineTuningModel',
            finetuning__pb2.CreateFineTuningModelRequest.SerializeToString,
            finetuning__pb2.CreateFineTuningModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFineTuningModelById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gooseai.FineTuningService/GetFineTuningModelById',
            finetuning__pb2.GetFineTuningModelByIdRequest.SerializeToString,
            finetuning__pb2.GetFineTuningModelByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFineTuningModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gooseai.FineTuningService/UpdateFineTuningModel',
            finetuning__pb2.UpdateFineTuningModelRequest.SerializeToString,
            finetuning__pb2.UpdateFineTuningModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFineTuningModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gooseai.FineTuningService/DeleteFineTuningModel',
            finetuning__pb2.DeleteFineTuningModelRequest.SerializeToString,
            finetuning__pb2.DeleteFineTuningModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFineTuningModelStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gooseai.FineTuningService/GetFineTuningModelStatus',
            finetuning__pb2.GetFineTuningModelStatusRequest.SerializeToString,
            finetuning__pb2.GetFineTuningModelStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResubmitFineTuningModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gooseai.FineTuningService/ResubmitFineTuningModel',
            finetuning__pb2.ResubmitFineTuningModelRequest.SerializeToString,
            finetuning__pb2.ResubmitFineTuningModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFineTuningModelsByUserId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gooseai.FineTuningService/GetFineTuningModelsByUserId',
            finetuning__pb2.GetFineTuningModelsByUserIdRequest.SerializeToString,
            finetuning__pb2.GetFineTuningModelsByUserIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFineTuningModelsByOrgId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gooseai.FineTuningService/GetFineTuningModelsByOrgId',
            finetuning__pb2.GetFineTuningModelsByOrgIdRequest.SerializeToString,
            finetuning__pb2.GetFineTuningModelsByOrgIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
